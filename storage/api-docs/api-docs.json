{
    "openapi": "3.0.0",
    "info": {
        "title": "Swagger with Laravel",
        "version": "1.0.0"
    },
    "paths": {
        "/api/book/create": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Create a new book",
                "operationId": "createBook",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "category_id",
                                    "name",
                                    "author",
                                    "total_copies",
                                    "available_copies"
                                ],
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "The Great Gatsby"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "F. Scott Fitzgerald"
                                    },
                                    "short_description": {
                                        "type": "string",
                                        "example": "A novel set in the 1920s",
                                        "nullable": true
                                    },
                                    "total_copies": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "available_copies": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "book_cover": {
                                        "description": "Book cover image (jpg, jpeg, png, gif)",
                                        "type": "file"
                                    },
                                    "pdf_file": {
                                        "description": "PDF version of the book",
                                        "type": "file"
                                    },
                                    "audio_file": {
                                        "description": "Audio version of the book (mp3 or wav)",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "book create successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/list": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get list of books with optional filters and pagination",
                "operationId": "2987ac6eb5f5f261b85a9b3735c1bb66",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by book name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Filter by author name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of results per page (pagination)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/retrieve/{id}": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Retrieve a single book by ID",
                "operationId": "ea9e352ba3d45f07cb10e4a2f1823aac",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval of book details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Book"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book with this id is not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/edit/{id}": {
            "post": {
                "tags": [
                    "Books"
                ],
                "summary": "Update an existing book",
                "description": "Update book information including files (cover, PDF, audio). Use POST with _method=PUT for file uploads.",
                "operationId": "ac9ae3a1cf4f2ddfa0f7bebd2f1798de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "_method",
                                    "category_id",
                                    "name",
                                    "author",
                                    "total_copies",
                                    "available_copies"
                                ],
                                "properties": {
                                    "_method": {
                                        "description": "HTTP method override to support PUT with multipart/form-data",
                                        "type": "string",
                                        "example": "PUT"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Advanced Laravel"
                                    },
                                    "author": {
                                        "type": "string",
                                        "example": "Masud Bhuiyan"
                                    },
                                    "short_description": {
                                        "type": "string",
                                        "example": "A deep dive into Laravel."
                                    },
                                    "total_copies": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "available_copies": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "book_cover": {
                                        "description": "Optional book cover image",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "pdf_file": {
                                        "description": "Optional PDF version of the book",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "audio_file": {
                                        "description": "Optional audio version of the book",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Book updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error or book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/delete/{id}": {
            "delete": {
                "tags": [
                    "Books"
                ],
                "summary": "Delete a book by ID",
                "operationId": "74fad88b506f38ed9df7464dc7932222",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Book ID to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Book not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/popular-books": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get top 20 popular books",
                "description": "Returns the 20 most borrowed books with their category details",
                "operationId": "d3b348368c84b82f562157e9486b03a7",
                "responses": {
                    "200": {
                        "description": "List of popular books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Top 20 popular books"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/new-collection": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Get latest 20 books",
                "description": "Returns the 20 most recently added books with category details",
                "operationId": "ed43e0dc3e21613a503fbe1fb9899af9",
                "responses": {
                    "200": {
                        "description": "List of latest books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Latest 20 books"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Book"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/book/{id}/is_available": {
            "get": {
                "tags": [
                    "Books"
                ],
                "summary": "Check if a book is available",
                "description": "Returns whether the book with the given ID has available copies",
                "operationId": "7aeeb35a4ec0a7abab8bc53dbb594244",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the book to check availability",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Availability status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "is_available": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book is not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{borrow_id}": {
            "post": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking",
                "description": "Creates a booking for a borrow record. The booking_date and expiry_date are automatically determined on the server.",
                "operationId": "1936ab735c1ee10dce408d15459cda62",
                "parameters": [
                    {
                        "name": "borrow_id",
                        "in": "path",
                        "description": "ID of the borrow record to create a booking for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Booking created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking created successfully"
                                        },
                                        "booking": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Booking already exists, over limit, or invalid return date",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Booking already exists for this borrow"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Borrow record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Borrow record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "List all bookings",
                "description": "Retrieve a list of bookings. Admins get all bookings with 'pending' or 'available' status. Normal users get their own bookings only.",
                "operationId": "getBookings",
                "responses": {
                    "200": {
                        "description": "List of bookings retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookings retrieved successfully"
                                        },
                                        "bookings": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Booking"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{id}": {
            "get": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Retrieve a specific booking",
                "description": "Get a booking by ID. Only the owner or an admin can access the booking details.",
                "operationId": "getBookingById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking retrieved successfully"
                                        },
                                        "booking": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Booking not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Delete a booking",
                "description": "Allows an admin or the booking owner to delete a booking.",
                "operationId": "deleteBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the booking to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Booking deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Booking not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/bookings/{id}/collect": {
            "put": {
                "tags": [
                    "Bookings"
                ],
                "summary": "Collect a booking",
                "description": "Allows a user to mark their own booking as collected if it's available.",
                "operationId": "collectBooking",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Booking ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Booking updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Booking updated successfully"
                                        },
                                        "booking": {
                                            "$ref": "#/components/schemas/Booking"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access or booking not available",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Booking is not available for collection"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Booking not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Booking not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrow/create": {
            "post": {
                "tags": [
                    "Borrow"
                ],
                "summary": "Create a new borrow record (borrow a book)",
                "operationId": "dabefcead89973bbcecb10a9ccb54de6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "book_id"
                                ],
                                "properties": {
                                    "book_id": {
                                        "description": "ID of the book to borrow",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "return_date": {
                                        "description": "Optional return date, must be today or later",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-30",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Book borrowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book borrowed successfully"
                                        },
                                        "borrow": {
                                            "$ref": "#/components/schemas/Borrow"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or no available copies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No available copies"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "details": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrow/list": {
            "get": {
                "tags": [
                    "Borrow"
                ],
                "summary": "List borrowed books",
                "operationId": "098b5360f86ede640f6cec41877f223d",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "query",
                        "description": "Filter by book ID",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of borrowed books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "borrows": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Borrow"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Token not provided or invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrow/retrieve/{id}": {
            "get": {
                "tags": [
                    "Borrow"
                ],
                "summary": "Retrieve a borrow record",
                "description": "Retrieve a specific borrow record by ID. Admins can access all records, while normal users can only access their own.",
                "operationId": "getBorrowRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the borrow record",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful borrow record retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "borrow": {
                                            "$ref": "#/components/schemas/Borrow"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access to the borrow record"
                    },
                    "404": {
                        "description": "Borrow record not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrows/extend/{id}": {
            "patch": {
                "tags": [
                    "Borrow"
                ],
                "summary": "Extend return date of a borrow record",
                "description": "Allows the authenticated user to extend the return date of a borrow, if no in-progress booking exists and extension limit is not exceeded.",
                "operationId": "extendBorrow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the borrow record to extend",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "return_date"
                                ],
                                "properties": {
                                    "return_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Borrow record extended successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow record extended successfully"
                                        },
                                        "borrow": {
                                            "$ref": "#/components/schemas/Borrow"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Extension blocked due to active booking or extension limit reached",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Extension limit exceeded"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized — user doesn't own the borrow record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Borrow record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error (invalid return_date)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/borrows/return/{id}": {
            "post": {
                "tags": [
                    "Borrow"
                ],
                "summary": "Return a borrowed book",
                "description": "Allows a user to return a borrowed book. The borrow status is marked as 'returned'. If no upcoming booking exists, the available copies of the book are incremented.",
                "operationId": "returnBorrow",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the borrow record",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book returned successfully"
                                        },
                                        "borrow": {
                                            "$ref": "#/components/schemas/Borrow"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized – user doesn't own the borrow record",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Borrow record not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Borrow record not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/create": {
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "operationId": "720fa91edfe99b9c6a4b68e1aa33871a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "example": "Science Fiction"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_name": {
                                                    "type": "string",
                                                    "example": "Science Fiction"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2025-07-31T12:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2025-07-31T12:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The category_name field is required."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/list": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get all categories",
                "operationId": "2d299c2c5fd8771f38a0a38df0a2b58b",
                "responses": {
                    "200": {
                        "description": "List of categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "category_name": {
                                                        "type": "string",
                                                        "example": "Books"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-07-31T10:15:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-07-31T10:20:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/update/{id}": {
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update a category",
                "operationId": "1a78fdb5858cadd0ff572470d33ce615",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category_name"
                                ],
                                "properties": {
                                    "category_name": {
                                        "type": "string",
                                        "example": "Updated Category"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "category": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "category_name": {
                                                    "type": "string",
                                                    "example": "Updated Category"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2024-07-31T10:15:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2024-07-31T10:20:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "category_name": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The category name has already been taken."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/category/delete/{id}": {
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete a category",
                "operationId": "177ca7c6efc6f8228b4883c4770ada7d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the category to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/create": {
            "post": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "Create a new donation request",
                "description": "Creates a new donation request. Authenticated users only.",
                "operationId": "createDonationRequest",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "book_title",
                                    "number_of_copies",
                                    "contact_number"
                                ],
                                "properties": {
                                    "book_title": {
                                        "type": "string",
                                        "example": "Clean Code"
                                    },
                                    "author_name": {
                                        "type": "string",
                                        "example": "Robert C. Martin"
                                    },
                                    "number_of_copies": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Chittagong Central Library"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "+8801771234567"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Donation request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DonationRequest"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/list": {
            "get": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "List donation requests",
                "description": "Admins see only pending requests. Other users see their own donation requests.",
                "operationId": "listDonationRequests",
                "responses": {
                    "200": {
                        "description": "List of donation requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DonationRequest"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/retrieve/{id}": {
            "get": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "Retrieve a specific donation request",
                "description": "Admins can retrieve any donation request. Users can retrieve only their own.",
                "operationId": "getDonationRequestById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the donation request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donation request details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DonationRequest"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Donation request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/edit/{id}": {
            "put": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "Update a donation request",
                "description": "Only the user who created the donation request can update it.",
                "operationId": "updateDonationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the donation request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "book_title": {
                                        "type": "string",
                                        "example": "Introduction to Algorithms"
                                    },
                                    "author_name": {
                                        "type": "string",
                                        "example": "Thomas H. Cormen"
                                    },
                                    "number_of_copies": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Main Library"
                                    },
                                    "contact_number": {
                                        "type": "string",
                                        "example": "0123456789"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Donation request updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DonationRequest"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Donation request not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/delete/{id}": {
            "delete": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "Delete a donation request",
                "description": "Only the user who created the donation request can delete it.",
                "operationId": "deleteDonationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the donation request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Donation request deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Donation request deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Donation request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/donation/approve-reject/{id}": {
            "patch": {
                "tags": [
                    "Donation Requests"
                ],
                "summary": "Approve or reject a donation request",
                "description": "Only admin users can approve or reject donation requests.",
                "operationId": "approveRejectDonationRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the donation request",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "action"
                                ],
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "approve",
                                            "reject"
                                        ],
                                        "example": "approve"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Donation request status updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DonationRequest"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid action"
                    },
                    "403": {
                        "description": "Unauthorized access"
                    },
                    "404": {
                        "description": "Donation request not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/featured-books/{book_id}": {
            "post": {
                "tags": [
                    "Featured Books"
                ],
                "summary": "Add a book to the featured list",
                "description": "Allows admin users to add a book to the featured list by its ID.",
                "operationId": "addFeaturedBook",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "ID of the book to feature",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book added to featured list successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book added to featured list successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/featured-books": {
            "get": {
                "tags": [
                    "Featured Books"
                ],
                "summary": "List all featured books",
                "description": "Returns a list of all books marked as featured.",
                "operationId": "listFeaturedBooks",
                "responses": {
                    "200": {
                        "description": "List of featured books",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FeaturedBook"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/featured-books/{id}": {
            "delete": {
                "tags": [
                    "Featured Books"
                ],
                "summary": "Remove a book from the featured list",
                "description": "Allows admin users to remove a book from the featured list.",
                "operationId": "removeFeaturedBook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the featured book",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book removed from featured list successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Featured book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Featured book not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/{book_id}/create": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review for a book",
                "description": "Allows an authenticated user to submit a review for a specific book",
                "operationId": "createReview",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "ID of the book to review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "comment": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Really insightful and well-written."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully"
                                        },
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Book not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Book not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/{book_id}/list": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get list of reviews for a book",
                "description": "Returns a list of reviews for the specified book",
                "operationId": "getBookReviews",
                "parameters": [
                    {
                        "name": "book_id",
                        "in": "path",
                        "description": "ID of the book",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reviews": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/retrieve/{id}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get a single review",
                "description": "Returns the review for the given ID",
                "operationId": "getReviewById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/edit/{id}": {
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update a review",
                "description": "Allows the review owner to update their review",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "comment": {
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Updated comment about the book."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Review updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review updated successfully"
                                        },
                                        "review": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to update this review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/review/delete/{id}": {
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "description": "Deletes a review if the authenticated user is the owner",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the review to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 7
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to delete this review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Review not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Review not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/get-settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get system settings",
                "operationId": "d3902d89ed80d225a67be41356f9dc51",
                "responses": {
                    "200": {
                        "description": "Settings retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Settings"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/borrow-day-limit": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update borrow day limit",
                "operationId": "879b5073ff2bc7f55e498acbaf049ff1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "max_borrow_duration"
                                ],
                                "properties": {
                                    "max_borrow_duration": {
                                        "type": "integer",
                                        "example": 30
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Borrow duration updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/borrow-extend-limit": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update borrow extension limit",
                "operationId": "75337c3bde591521563ca3a40e06b458",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "max_extension_limit"
                                ],
                                "properties": {
                                    "max_extension_limit": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Borrow extension count updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/borrow-limit": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update max borrow limit",
                "operationId": "1e3d3fa91263e340a40dab36370fa620",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "max_borrow_limit"
                                ],
                                "properties": {
                                    "max_borrow_limit": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Borrow limit updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/booking-duration": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update max booking duration",
                "operationId": "dbda560f7419cc7c1949e882d33dfe4a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "max_booking_duration"
                                ],
                                "properties": {
                                    "max_booking_duration": {
                                        "type": "integer",
                                        "example": 7
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Booking duration updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/settings/booking-days-limit": {
            "patch": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update max booking limit",
                "operationId": "d18f6c3b2acad1855a92b146cd2a4c18",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "max_booking_limit"
                                ],
                                "properties": {
                                    "max_booking_limit": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Booking limit updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Settings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Book": {
                "title": "Book Resource",
                "required": [
                    "id",
                    "category",
                    "name",
                    "author",
                    "total_copies",
                    "available_copies"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "description": "Either category ID or full category object if loaded",
                        "oneOf": [
                            {
                                "type": "integer",
                                "example": 2
                            },
                            {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Fiction"
                                    }
                                },
                                "type": "object"
                            }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "example": "The Great Gatsby"
                    },
                    "author": {
                        "type": "string",
                        "example": "F. Scott Fitzgerald"
                    },
                    "short_description": {
                        "type": "string",
                        "example": "A classic novel set in the 1920s",
                        "nullable": true
                    },
                    "total_copies": {
                        "type": "integer",
                        "example": 10
                    },
                    "available_copies": {
                        "type": "integer",
                        "example": 7
                    },
                    "average_rating": {
                        "type": "integer",
                        "example": 4
                    },
                    "total_ratings": {
                        "type": "integer",
                        "example": 100
                    },
                    "rating_count": {
                        "type": "integer",
                        "example": 25
                    },
                    "book_cover_url": {
                        "type": "string",
                        "format": "url",
                        "example": "http://localhost/storage/book_covers/cover.jpg",
                        "nullable": true
                    },
                    "pdf_file_url": {
                        "type": "string",
                        "format": "url",
                        "example": "http://localhost/storage/pdf_files/book.pdf",
                        "nullable": true
                    },
                    "audio_file_url": {
                        "type": "string",
                        "format": "url",
                        "example": "http://localhost/storage/audio_files/book.mp3",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Booking": {
                "title": "Booking Resource",
                "required": [
                    "id",
                    "user_id",
                    "book_id",
                    "status",
                    "booking_date",
                    "expiry_date"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "book_id": {
                        "type": "integer",
                        "example": 12
                    },
                    "status": {
                        "description": "Status of the booking (e.g., pending, approved, cancelled)",
                        "type": "string",
                        "example": "pending"
                    },
                    "booking_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-04"
                    },
                    "expiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-11"
                    },
                    "book": {
                        "description": "Either book ID or full book object if loaded",
                        "oneOf": [
                            {
                                "type": "integer",
                                "example": 12
                            },
                            {
                                "$ref": "#/components/schemas/Book"
                            }
                        ]
                    },
                    "user": {
                        "description": "Either user ID or full user object if loaded",
                        "oneOf": [
                            {
                                "type": "integer",
                                "example": 5
                            },
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ]
                    },
                    "Borrow": {
                        "description": "Either borrow ID or full borrow object if loaded",
                        "oneOf": [
                            {
                                "type": "integer",
                                "example": 7
                            },
                            {
                                "$ref": "#/components/schemas/Borrow"
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Borrow": {
                "required": [
                    "id",
                    "borrowed_at",
                    "return_date",
                    "status",
                    "extension_count"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "borrowed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-01T10:00:00Z"
                    },
                    "return_date": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-31T23:59:59Z"
                    },
                    "status": {
                        "type": "string",
                        "example": "borrowed"
                    },
                    "returned_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-07-25T14:30:00Z",
                        "nullable": true
                    },
                    "extension_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "book": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Book"
                            }
                        ],
                        "nullable": true
                    },
                    "user": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/User"
                            }
                        ],
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "DonationRequest": {
                "title": "DonationRequest",
                "required": [
                    "id",
                    "user_id",
                    "book_title",
                    "status",
                    "number_of_copies",
                    "contact_number"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "book_title": {
                        "type": "string",
                        "example": "Introduction to Algorithms"
                    },
                    "author_name": {
                        "type": "string",
                        "example": "Thomas H. Cormen"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "approved",
                            "rejected"
                        ],
                        "example": "pending"
                    },
                    "number_of_copies": {
                        "type": "integer",
                        "example": 2
                    },
                    "location": {
                        "type": "string",
                        "example": "Dhaka Library Zone 3"
                    },
                    "contact_number": {
                        "type": "string",
                        "example": "+8801700000000"
                    }
                },
                "type": "object"
            },
            "FeaturedBook": {
                "title": "FeaturedBook",
                "required": [
                    "id",
                    "book"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "book": {
                        "description": "Book object if loaded, otherwise book ID",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/Book"
                            },
                            {
                                "type": "integer",
                                "example": 10
                            }
                        ]
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "required": [
                    "id",
                    "book_id",
                    "user_id",
                    "rating"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "book_id": {
                        "type": "integer",
                        "example": 10
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "rating": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 4
                    },
                    "comment": {
                        "type": "string",
                        "example": "Great book on Laravel!"
                    }
                },
                "type": "object"
            },
            "Settings": {
                "title": "Settings",
                "required": [
                    "max_borrow_duration",
                    "max_borrow_limit",
                    "max_extension_limit",
                    "max_booking_duration",
                    "max_booking_limit"
                ],
                "properties": {
                    "max_borrow_duration": {
                        "type": "integer",
                        "example": 30
                    },
                    "max_borrow_limit": {
                        "type": "integer",
                        "example": 3
                    },
                    "max_extension_limit": {
                        "type": "integer",
                        "example": 2
                    },
                    "max_booking_duration": {
                        "type": "integer",
                        "example": 7
                    },
                    "max_booking_limit": {
                        "type": "integer",
                        "example": 3
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "name",
                    "email",
                    "role"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "customer"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-05-15"
                    },
                    "address": {
                        "type": "string",
                        "example": "123 Main St, Dhaka, Bangladesh"
                    },
                    "profile_picture": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://example.com/storage/users/john.jpg",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Books",
            "description": "Books"
        },
        {
            "name": "Bookings",
            "description": "Bookings"
        },
        {
            "name": "Borrow",
            "description": "Borrow"
        },
        {
            "name": "Categories",
            "description": "Categories"
        },
        {
            "name": "Donation Requests",
            "description": "Donation Requests"
        },
        {
            "name": "Featured Books",
            "description": "Featured Books"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "Settings",
            "description": "Settings"
        }
    ]
}